// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PurrfectMatch.Infrastructure.Data;

#nullable disable

namespace PurrfectMatch.Infrastructure.Migrations.PurrfectMatch
{
    [DbContext(typeof(PurrfectMatchContext))]
    [Migration("20250426134641_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PostTag", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("PostId", "TagId")
                        .HasName("PK__PostTags__7C45AF821CFFCEB1");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags", (string)null);
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.ActivityLevel", b =>
                {
                    b.Property<int>("ActivityLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityLevelId"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ActivityLevelId")
                        .HasName("PK__Activity__D95C31A85F31229A");

                    b.HasIndex(new[] { "Activity" }, "UQ__Activity__685755E71F7E1F0F")
                        .IsUnique();

                    b.ToTable("ActivityLevels");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GoogleMapLink")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AddressId")
                        .HasName("PK__Addresse__091C2AFB84481526");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.AdoptionApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime>("ApplicationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedByUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pending");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ApplicationId")
                        .HasName("PK__Adoption__C93A4C99CC2EEE5F");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex(new[] { "IsDeleted" }, "IX_AdoptionApplications_IsDeleted");

                    b.HasIndex(new[] { "PetId" }, "IX_AdoptionApplications_Pet");

                    b.HasIndex(new[] { "Status" }, "IX_AdoptionApplications_Status");

                    b.HasIndex(new[] { "UserId" }, "IX_AdoptionApplications_User");

                    b.ToTable("AdoptionApplications");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.ApplicationNotification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("ActionUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("NotificationId")
                        .HasName("PK__Applicat__20CF2E123E92AD60");

                    b.HasIndex("SenderId");

                    b.HasIndex(new[] { "ApplicationId" }, "IX_ApplicationNotifications_Application");

                    b.HasIndex(new[] { "ReceiverId", "IsRead" }, "IX_ApplicationNotifications_Receiver");

                    b.ToTable("ApplicationNotifications");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Breed", b =>
                {
                    b.Property<int>("BreedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BreedId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.HasKey("BreedId")
                        .HasName("PK__Breeds__D1E9AE9DA01D2E4A");

                    b.HasIndex(new[] { "SpeciesId", "Name" }, "UQ_Breed_Species")
                        .IsUnique();

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.CoatLength", b =>
                {
                    b.Property<int>("CoatLengthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoatLengthId"));

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CoatLengthId")
                        .HasName("PK__CoatLeng__DDA9ACBBE5447B84");

                    b.HasIndex(new[] { "Length" }, "UQ__CoatLeng__88949D7045BD91A0")
                        .IsUnique();

                    b.ToTable("CoatLengths");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("Color1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Color");

                    b.HasKey("ColorId")
                        .HasName("PK__Colors__8DA7674DF0CA5D3B");

                    b.HasIndex(new[] { "Color1" }, "UQ__Colors__E11D384567A4032D")
                        .IsUnique();

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Donation", b =>
                {
                    b.Property<int>("DonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonationId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAnonymous")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DonationId")
                        .HasName("PK__Donation__C5082EFB6AE093E1");

                    b.HasIndex(new[] { "UserId" }, "IX_Donations_User");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Favorite", b =>
                {
                    b.Property<int>("FavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FavoriteId")
                        .HasName("PK__Favorite__CE74FAD5631395C8");

                    b.HasIndex("PetId");

                    b.HasIndex(new[] { "UserId", "PetId" }, "Favorites_index_9")
                        .IsUnique();

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.GoodWith", b =>
                {
                    b.Property<int>("GoodWithId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoodWithId"));

                    b.Property<string>("GoodWith1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("GoodWith");

                    b.HasKey("GoodWithId")
                        .HasName("PK__GoodWith__D65840948C3C34ED");

                    b.HasIndex(new[] { "GoodWith1" }, "UQ__GoodWith__2C7BACDE9E2A69C5")
                        .IsUnique();

                    b.ToTable("GoodWith", (string)null);
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.HealthRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("MedicalHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("VaccinationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecordId")
                        .HasName("PK__HealthRe__FBDF78E93FD2B339");

                    b.HasIndex("PetId");

                    b.ToTable("HealthRecords");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.HealthStatus", b =>
                {
                    b.Property<int>("HealthStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HealthStatusId"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("HealthStatusId")
                        .HasName("PK__HealthSt__F9C58EDF81A3E5B5");

                    b.HasIndex(new[] { "Status" }, "UQ__HealthSt__3A15923F844E533C")
                        .IsUnique();

                    b.ToTable("HealthStatuses");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ChangeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ChangedByUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LogId")
                        .HasName("PK__Logs__5E548648A004AC44");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<string>("ActionUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NotificationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E12BFAA4FC7");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetId"));

                    b.Property<int>("ActivityLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Age")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BreedId")
                        .HasColumnType("int");

                    b.Property<int>("CoatLengthId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedByUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("HealthStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdopted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Microchipped")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("PetId")
                        .HasName("PK__Pets__48E53862C0BABF5E");

                    b.HasIndex("ActivityLevelId");

                    b.HasIndex("CoatLengthId");

                    b.HasIndex("ColorId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex("HealthStatusId");

                    b.HasIndex(new[] { "IsAdopted" }, "IX_Pets_AdoptionStatus");

                    b.HasIndex(new[] { "BreedId" }, "IX_Pets_Breed");

                    b.HasIndex(new[] { "IsDeleted" }, "IX_Pets_IsDeleted");

                    b.HasIndex(new[] { "ShelterId" }, "IX_Pets_Shelter");

                    b.HasIndex(new[] { "SpeciesId" }, "IX_Pets_Species");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.PetGoodWith", b =>
                {
                    b.Property<int>("PetGoodWithId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetGoodWithId"));

                    b.Property<int>("GoodWithId")
                        .HasColumnType("int");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.HasKey("PetGoodWithId")
                        .HasName("PK__PetGoodW__A08EE2A2885C6014");

                    b.HasIndex("GoodWithId");

                    b.HasIndex("PetId");

                    b.ToTable("PetGoodWith", (string)null);
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.PetPhoto", b =>
                {
                    b.Property<int>("PhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhotoId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhotoId")
                        .HasName("PK__PetPhoto__21B7B5E27B24F1A3");

                    b.HasIndex("PetId");

                    b.ToTable("PetPhotos");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PostType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PostId")
                        .HasName("PK__Posts__AA126018A855846B");

                    b.HasIndex("ShelterId");

                    b.HasIndex(new[] { "PostType" }, "IX_Posts_PostType");

                    b.HasIndex(new[] { "UserId" }, "IX_WebsitePosts_User");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__74BC79CE94CBD7D6");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "ShelterId" }, "IX_Reviews_Shelter");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Shelter", b =>
                {
                    b.Property<int>("ShelterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShelterId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletedByUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DonationUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Website")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ShelterId")
                        .HasName("PK__Shelters__E2CDF55486D47A30");

                    b.HasIndex("AddressId");

                    b.HasIndex("DeletedByUserId");

                    b.HasIndex(new[] { "IsDeleted" }, "IX_Shelters_IsDeleted");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.ShelterCreationRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("RequestedAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ShelterName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RequestId")
                        .HasName("PK__ShelterC__33A8517AC9295433");

                    b.HasIndex("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("ShelterCreationRequests");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.ShelterFollower", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ShelterFollowerId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ShelterId")
                        .HasName("PK__ShelterF__49A41319E2310B7B");

                    b.HasIndex("ShelterId");

                    b.ToTable("ShelterFollowers");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.ShelterManager", b =>
                {
                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ShelterManagerId")
                        .HasColumnType("int");

                    b.HasKey("ShelterId", "UserId")
                        .HasName("PK__ShelterM__33B57990C5290F31");

                    b.HasIndex(new[] { "ShelterId" }, "IX_ShelterManagers_Shelter");

                    b.HasIndex(new[] { "UserId" }, "IX_ShelterManagers_User");

                    b.ToTable("ShelterManagers");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Species", b =>
                {
                    b.Property<int>("SpeciesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpeciesId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SpeciesId")
                        .HasName("PK__Species__A938045FEF287D30");

                    b.HasIndex(new[] { "Name" }, "UQ__Species__737584F666C6F646")
                        .IsUnique();

                    b.ToTable("Species");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TagId")
                        .HasName("PK__Tags__657CF9ACEB35B375");

                    b.HasIndex(new[] { "TagName" }, "UQ__Tags__BDE0FD1DFCE85067")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.UserProfile", b =>
                {
                    b.Property<int>("UserProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserProfileId"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Allergies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CurrentPetsOwned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ExperienceWithPets")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GeneralInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasYard")
                        .HasColumnType("bit");

                    b.Property<string>("HousingType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Job")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserProfileId")
                        .HasName("PK__UserProf__9E267F62045FFEC5");

                    b.HasIndex(new[] { "UserId" }, "UQ__UserProf__1788CC4DAE6AE66B")
                        .IsUnique();

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("PostTag", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Post", null)
                        .WithMany()
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK__PostTags__PostId__6AEFE058");

                    b.HasOne("PurrfectMatch.Domain.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .IsRequired()
                        .HasConstraintName("FK__PostTags__TagId__6BE40491");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.AdoptionApplication", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.User", "DeletedByUser")
                        .WithMany("AdoptionApplications")
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("PurrfectMatch.Domain.Entities.Pet", "Pet")
                        .WithMany("AdoptionApplications")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK__AdoptionA__PetId__607251E5");

                    b.Navigation("DeletedByUser");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.ApplicationNotification", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.AdoptionApplication", "Application")
                        .WithMany("ApplicationNotifications")
                        .HasForeignKey("ApplicationId")
                        .IsRequired()
                        .HasConstraintName("FK__Applicati__Appli__625A9A57");

                    b.HasOne("PurrfectMatch.Domain.Entities.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_ApplicationNotifications_ReceiverId");

                    b.HasOne("PurrfectMatch.Domain.Entities.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_ApplicationNotifications_SenderId");

                    b.Navigation("Application");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Breed", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Species", "Species")
                        .WithMany("Breeds")
                        .HasForeignKey("SpeciesId")
                        .IsRequired()
                        .HasConstraintName("FK__Breeds__SpeciesI__5224328E");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Donation", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Favorite", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Pet", "Pet")
                        .WithMany("Favorites")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK__Favorites__PetId__5E8A0973");

                    b.HasOne("PurrfectMatch.Domain.Entities.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.HealthRecord", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Pet", "Pet")
                        .WithMany("HealthRecords")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK__HealthRec__PetId__662B2B3B");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Notification", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Pet", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.ActivityLevel", "ActivityLevel")
                        .WithMany("Pets")
                        .HasForeignKey("ActivityLevelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Pet_ActivityLevel_ActivityLevelId");

                    b.HasOne("PurrfectMatch.Domain.Entities.Breed", "Breed")
                        .WithMany("Pets")
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Pet_Breed_BreedId");

                    b.HasOne("PurrfectMatch.Domain.Entities.CoatLength", "CoatLength")
                        .WithMany("Pets")
                        .HasForeignKey("CoatLengthId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Pet_CoatLength_CoatLengthId");

                    b.HasOne("PurrfectMatch.Domain.Entities.Color", "Color")
                        .WithMany("Pets")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Pet_Color_ColorId");

                    b.HasOne("PurrfectMatch.Domain.Entities.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.HasOne("PurrfectMatch.Domain.Entities.HealthStatus", "HealthStatus")
                        .WithMany("Pets")
                        .HasForeignKey("HealthStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Pet_HealthStatus_HealthStatusId");

                    b.HasOne("PurrfectMatch.Domain.Entities.Shelter", "Shelter")
                        .WithMany("Pets")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Pet_Shelter_ShelterId");

                    b.HasOne("PurrfectMatch.Domain.Entities.Species", "Species")
                        .WithMany("Pets")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Pet_Species_SpeciesId");

                    b.Navigation("ActivityLevel");

                    b.Navigation("Breed");

                    b.Navigation("CoatLength");

                    b.Navigation("Color");

                    b.Navigation("DeletedByUser");

                    b.Navigation("HealthStatus");

                    b.Navigation("Shelter");

                    b.Navigation("Species");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.PetGoodWith", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.GoodWith", "GoodWith")
                        .WithMany("PetGoodWiths")
                        .HasForeignKey("GoodWithId")
                        .IsRequired()
                        .HasConstraintName("FK__PetGoodWi__GoodW__5BAD9CC8");

                    b.HasOne("PurrfectMatch.Domain.Entities.Pet", "Pet")
                        .WithMany("PetGoodWiths")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK__PetGoodWi__PetId__5AB9788F");

                    b.Navigation("GoodWith");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.PetPhoto", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Pet", "Pet")
                        .WithMany("PetPhotos")
                        .HasForeignKey("PetId")
                        .IsRequired()
                        .HasConstraintName("FK__PetPhotos__PetId__5CA1C101");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Post", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Shelter", "Shelter")
                        .WithMany("Posts")
                        .HasForeignKey("ShelterId")
                        .HasConstraintName("FK__Posts__ShelterId__69FBBC1F");

                    b.HasOne("PurrfectMatch.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Review", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Shelter", "Shelter")
                        .WithMany("Reviews")
                        .HasForeignKey("ShelterId")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__Shelter__681373AD");

                    b.HasOne("PurrfectMatch.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Shelter", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Address", "Address")
                        .WithMany("Shelters")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK__Shelters__Addres__4B7734FF");

                    b.HasOne("PurrfectMatch.Domain.Entities.User", "DeletedByUser")
                        .WithMany()
                        .HasForeignKey("DeletedByUserId");

                    b.Navigation("Address");

                    b.Navigation("DeletedByUser");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.ShelterCreationRequest", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PurrfectMatch.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.ShelterFollower", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Shelter", "Shelter")
                        .WithMany("ShelterFollowers")
                        .HasForeignKey("ShelterId")
                        .IsRequired()
                        .HasConstraintName("FK__ShelterFo__Shelt__503BEA1C");

                    b.HasOne("PurrfectMatch.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.ShelterManager", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.Shelter", "Shelter")
                        .WithMany("ShelterManagers")
                        .HasForeignKey("ShelterId")
                        .IsRequired()
                        .HasConstraintName("FK__ShelterMa__Shelt__4D5F7D71");

                    b.HasOne("PurrfectMatch.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shelter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.UserProfile", b =>
                {
                    b.HasOne("PurrfectMatch.Domain.Entities.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("PurrfectMatch.Domain.Entities.UserProfile", "UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserProfi__UserI__6CD828CA");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.ActivityLevel", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Address", b =>
                {
                    b.Navigation("Shelters");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.AdoptionApplication", b =>
                {
                    b.Navigation("ApplicationNotifications");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Breed", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.CoatLength", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Color", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.GoodWith", b =>
                {
                    b.Navigation("PetGoodWiths");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.HealthStatus", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Pet", b =>
                {
                    b.Navigation("AdoptionApplications");

                    b.Navigation("Favorites");

                    b.Navigation("HealthRecords");

                    b.Navigation("PetGoodWiths");

                    b.Navigation("PetPhotos");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Shelter", b =>
                {
                    b.Navigation("Pets");

                    b.Navigation("Posts");

                    b.Navigation("Reviews");

                    b.Navigation("ShelterFollowers");

                    b.Navigation("ShelterManagers");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.Species", b =>
                {
                    b.Navigation("Breeds");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("PurrfectMatch.Domain.Entities.User", b =>
                {
                    b.Navigation("AdoptionApplications");

                    b.Navigation("Favorites");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
